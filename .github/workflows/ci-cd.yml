name: Azure AI Search CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 5 * * 1'  # Weekly documentation validation

jobs:
  validate-documentation:
    name: Documentation Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install documentation tools
      run: |
        python -m pip install --upgrade pip
        pip install markdown-link-check markdownlint-cli2 yamllint
    
    - name: Validate Markdown files
      run: |
        find . -name "*.md" -exec echo "Validating: {}" \;
        find . -name "*.md" -exec markdownlint-cli2 {} \; || true
    
    - name: Check for broken links
      run: |
        find . -name "*.md" -exec markdown-link-check {} \; || true
    
    - name: Validate YAML files
      run: |
        find . -name "*.yml" -o -name "*.yaml" | xargs yamllint || true
    
    - name: Check documentation completeness
      run: |
        echo "Checking documentation completeness..."
        test -f README.md || (echo "README.md is missing" && exit 1)
        test -f LICENSE || (echo "LICENSE is missing" && exit 1)
        test -f CONTRIBUTING.md || (echo "CONTRIBUTING.md is missing" && exit 1)
        echo "All required documentation files are present"

  validate-azure-configs:
    name: Azure Configuration Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Azure CLI
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
    
    - name: Validate Azure configurations
      run: |
        echo "Validating Azure AI Search configurations..."
        echo "Checking ARM templates and configuration files..."
        # Add Azure configuration validation here
    
    - name: Test Azure AI Search queries
      run: |
        echo "Testing sample Azure AI Search queries..."
        # Add query validation tests here

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  test-samples:
    name: Test Code Samples
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install azure-search-documents azure-core azure-identity requests
    
    - name: Validate Python samples
      run: |
        echo "Validating Python code samples..."
        python -m py_compile *.py || echo "No Python files to compile"
    
    - name: Test configuration examples
      run: |
        echo "Testing configuration examples..."
        # Add configuration testing here

  build-documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: [validate-documentation]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install documentation tools
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs mkdocs-material mkdocs-mermaid2-plugin
    
    - name: Build documentation site
      run: |
        echo "Building documentation site..."
        # Add MkDocs build commands here
    
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation-site
        path: site/

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [build-documentation, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download documentation artifacts
      uses: actions/download-artifact@v3
      with:
        name: documentation-site
        path: site/
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
    
    - name: Update Azure documentation
      run: |
        echo "Updating Azure AI Search documentation..."
        # Add Azure documentation update commands here

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [validate-azure-configs, test-samples]
    if: github.event_name != 'schedule'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install azure-search-documents azure-core azure-identity pytest requests
    
    - name: Run integration tests
      run: |
        echo "Running Azure AI Search integration tests..."
        # Add integration tests here
      env:
        AZURE_SEARCH_SERVICE_ENDPOINT: ${{ secrets.AZURE_SEARCH_SERVICE_ENDPOINT }}
        AZURE_SEARCH_API_KEY: ${{ secrets.AZURE_SEARCH_API_KEY }}

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [validate-documentation, validate-azure-configs, security-scan]
    if: always()

    steps:
    - name: Notify completion
      run: |
        echo "Azure AI Search CI/CD pipeline completed"
        echo "Documentation validation: ${{ needs.validate-documentation.result }}"
        echo "Azure configuration validation: ${{ needs.validate-azure-configs.result }}"
        echo "Security scan: ${{ needs.security-scan.result }}"
